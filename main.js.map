{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".actionBtn {\\r\\n  margin-top: 5px;\\r\\n  margin-bottom: 2px;\\r\\n  font-size: 1.2em;\\r\\n}\\r\\n\\r\\n.snapshot {\\r\\n  text-align: center;\\r\\n  img {\\r\\n    max-width: 800px;\\r\\n    max-height: 800px;\\r\\n  }\\r\\n}\\r\\n\\r\\nul.links {\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Ngx-Webcam Demo\\n  </h1>\\n\\n  <div>\\n    <webcam [height]=\\\"500\\\" [width]=\\\"500\\\" [trigger]=\\\"triggerObservable\\\" (imageCapture)=\\\"handleImage($event)\\\" *ngIf=\\\"showWebcam\\\"\\n            [allowCameraSwitch]=\\\"allowCameraSwitch\\\" [switchCamera]=\\\"nextWebcamObservable\\\"\\n            [videoOptions]=\\\"videoOptions\\\"\\n            [imageQuality]=\\\"1\\\"\\n            (cameraSwitched)=\\\"cameraWasSwitched($event)\\\"\\n            (initError)=\\\"handleInitError($event)\\\"\\n    ></webcam>\\n    <br/>\\n    <button class=\\\"actionBtn\\\" (click)=\\\"triggerSnapshot();\\\">Take A Snapshot</button>\\n    <button class=\\\"actionBtn\\\" (click)=\\\"toggleWebcam();\\\">Toggle Webcam</button>\\n    <br/>\\n    <button class=\\\"actionBtn\\\" (click)=\\\"showNextWebcam(true);\\\" [disabled]=\\\"!multipleWebcamsAvailable\\\">Next Webcam</button>\\n    <input id=\\\"cameraSwitchCheckbox\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"allowCameraSwitch\\\"><label for=\\\"cameraSwitchCheckbox\\\">Allow Camera Switch</label>\\n    <br/>\\n    DeviceId: <input id=\\\"deviceId\\\" type=\\\"text\\\" [(ngModel)]=\\\"deviceId\\\" style=\\\"width: 500px\\\">\\n    <button (click)=\\\"showNextWebcam(deviceId);\\\">Activate</button>\\n  </div>\\n</div>\\n\\n<div class=\\\"snapshot\\\" *ngIf=\\\"webcamImage\\\">\\n  <h2>Nice one!</h2>\\n  <img [src]=\\\"webcamImage.imageAsDataUrl\\\"/>\\n</div>\\n\\n<h4 *ngIf=\\\"errors.length > 0\\\">Messages:</h4>\\n<ul *ngFor=\\\"let error of errors\\\">\\n  <li>{{error | json}}</li>\\n</ul>\\n\\n<h2>Like this project on GitHub:</h2>\\n<ul class=\\\"links\\\">\\n  <li>\\n    <h2><a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://github.com/basst314/ngx-webcam\\\">Ngx-Webcam / GitHub</a></h2>\\n  </li>\\n</ul>\\n\"","import { Component, ViewChild, OnInit } from '@angular/core';\nimport {WebcamImage, WebcamInitError, WebcamUtil} from 'ngx-webcam';\nimport { Observable, Subject } from 'rxjs';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n\n  public showWebcam = true;\n  public allowCameraSwitch = true;\n  public multipleWebcamsAvailable = false;\n  public deviceId: string;\n  public videoOptions: MediaTrackConstraints = {\n    // width: {ideal: 1024},\n    // height: {ideal: 576}\n  };\n  public errors: WebcamInitError[] = [];\n\n  // latest snapshot\n  public webcamImage: WebcamImage = null;\n\n  // webcam snapshot trigger\n  private trigger: Subject<void> = new Subject<void>();\n  // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n  private nextWebcam: Subject<boolean|string> = new Subject<boolean|string>();\n\n  public ngOnInit(): void {\n    WebcamUtil.getAvailableVideoInputs()\n      .then((mediaDevices: MediaDeviceInfo[]) => {\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      });\n  }\n\n  public triggerSnapshot(): void {\n    this.trigger.next();\n  }\n\n  public toggleWebcam(): void {\n    this.showWebcam = !this.showWebcam;\n  }\n\n  public handleInitError(error: WebcamInitError): void {\n    this.errors.push(error);\n  }\n\n  public showNextWebcam(directionOrDeviceId: boolean|string): void {\n    // true => move forward through devices\n    // false => move backwards through devices\n    // string => move to device with given deviceId\n    this.nextWebcam.next(directionOrDeviceId);\n  }\n\n  public handleImage(webcamImage: WebcamImage): void {\n    console.log('received webcam image', webcamImage);\n    this.webcamImage = webcamImage;\n  }\n\n  public cameraWasSwitched(deviceId: string): void {\n    console.log('active device: ' + deviceId);\n    this.deviceId = deviceId;\n  }\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n\n  public get nextWebcamObservable(): Observable<boolean|string> {\n    return this.nextWebcam.asObservable();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport {WebcamModule} from 'ngx-webcam';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    WebcamModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}